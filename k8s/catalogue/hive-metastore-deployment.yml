apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-metastore
  namespace: catalogue
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hive-metastore
  template:
    metadata:
      labels:
        app: hive-metastore
    spec:
      initContainers:
      - name: init-hive-schema
        image: hive-de-infra:1
        command:
          - "bash"
          - "-c"
          - |
            echo 'Aguardando PostgreSQL...'
            sleep 15
            echo "Usando usuario=${PG_USERNAME}"
            echo "URL=jdbc:postgresql://postgres.database.svc.cluster.local:5432/metastore"
            if ! /opt/hive/bin/schematool -dbType postgres -userName ${PG_USERNAME} -passWord ${PG_PASSWORD} \
                -url jdbc:postgresql://postgres.database.svc.cluster.local:5432/metastore -driver org.postgresql.Driver -info; then
              echo 'Inicializando schema do Hive Metastore...'
              /opt/hive/bin/schematool -initSchema -dbType postgres -userName ${PG_USERNAME} -passWord ${PG_PASSWORD} \
                -url jdbc:postgresql://postgres.database.svc.cluster.local:5432/metastore -driver org.postgresql.Driver --verbose
            else
              echo 'Schema do Hive Metastore j√° existe'
            fi
        envFrom:
        - secretRef:
            name: hive-credentials
      - name: render-hive-config
        image: alpine:3.18
        command:
          - "/bin/sh"
          - "-c"
          - |
            apk add --no-cache gettext
            cp /configmap-hive-conf/* /hive-conf/
            envsubst < /hive-conf/core-site.xml > /hive-conf/core-site.xml.tmp && mv /hive-conf/core-site.xml.tmp /hive-conf/core-site.xml
            envsubst < /hive-conf/hive-site.xml > /hive-conf/hive-site.xml.tmp && mv /hive-conf/hive-site.xml.tmp /hive-conf/hive-site.xml
        envFrom:
        - secretRef:
            name: hive-credentials
        volumeMounts:
        - name: hive-config
          mountPath: /hive-conf
        - name: hive-configmap
          mountPath: /configmap-hive-conf
          readOnly: true
      containers:
      - name: hive-metastore
        image: hive-de-infra:1
        command: 
          - "/opt/hive/bin/hive"
          - "--service"
          - "metastore"
        ports:
        - containerPort: 9083
        env:
        - name: HADOOP_OPTS
          value: >-
            -Djavax.jdo.option.ConnectionUserName=$(PG_USERNAME)
            -Djavax.jdo.option.ConnectionPassword=$(PG_PASSWORD)
            -Dfs.s3a.access.key=$(MINIO_ADMIN_ACCESS_KEY)
            -Dfs.s3a.secret.key=$(MINIO_ADMIN_SECRET_KEY)
        - name: HIVE_OPTS
          value: >-
            -Djavax.jdo.option.ConnectionUserName=$(PG_USERNAME)
            -Djavax.jdo.option.ConnectionPassword=$(PG_PASSWORD)
            -Dfs.s3a.access.key=$(MINIO_ADMIN_ACCESS_KEY)
            -Dfs.s3a.secret.key=$(MINIO_ADMIN_SECRET_KEY)
        envFrom:
        - secretRef:
            name: hive-credentials
        volumeMounts:
        - name: hive-config
          mountPath: /opt/hive/conf
        - name: hive-configmap
          mountPath: /configmap-hive-conf
          readOnly: true

      volumes:
      - name: hive-config
        emptyDir: {}
      - name: hive-configmap
        configMap:
          name: hive-config
