version: '3.8'

services:
  # MinIO - S3 Compatible Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - data-lake

  # PostgreSQL - Database for Hive Metastore
  postgres:
    image: postgres:13
    container_name: postgres-hive
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - data-lake

  # Hive Metastore
  hive-metastore:
    build: .  # Usa o Dockerfile no diretório atual
    container_name: hive-metastore
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: metastore
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore -Djavax.jdo.option.ConnectionUserName=hive -Djavax.jdo.option.ConnectionPassword=hive123"
      HADOOP_OPTS: "-Djava.net.preferIPv4Stack=true"
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: admin123
      S3_ENDPOINT_URL: http://minio:9000
    ports:
      - "9083:9083"
    volumes:
      - ./config/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
      - ./config/core-site.xml:/opt/hive/conf/core-site.xml:ro
    command: |
      bash -c "
        # Aguardar PostgreSQL estar totalmente pronto
        echo 'Aguardando PostgreSQL...'
        sleep 15
        
        # Verificar se schema já existe antes de tentar criar
        if ! /opt/hive/bin/schematool -dbType postgres -info > /dev/null 2>&1; then
          echo 'Inicializando schema do Hive Metastore...'
          /opt/hive/bin/schematool -initSchema -dbType postgres --verbose
        else
          echo 'Schema do Hive Metastore já existe'
        fi
        
        echo 'Iniciando Hive Metastore...'
        /opt/hive/bin/hive --service metastore
      "
    healthcheck:
      test: ["CMD-SHELL", "netstat -ln | grep :9083 || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 15
      start_period: 120s
    networks:
      - data-lake

  # Trino Coordinator
  trino:
    image: trinodb/trino:latest
    container_name: trino-coordinator
    depends_on:
      hive-metastore:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./config/trino:/etc/trino:ro
    environment:
      - JAVA_HEAP_SIZE=2G
      # Configurações específicas para WSL2
      - JAVA_OPTS=-Djava.net.preferIPv4Stack=true -Djava.security.egd=file:/dev/./urandom
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/v1/info || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 90s
    networks:
      - data-lake

volumes:
  minio_data:
  postgres_data:

networks:
  data-lake:
    driver: bridge